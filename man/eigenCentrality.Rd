% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eigenCentrality.R
\name{eigenCentrality}
\alias{eigenCentrality}
\title{Eigenvector Centrality}
\usage{
eigenCentrality(mat, tolerance = 1e-06, maxIter = 500, sorted = TRUE)
}
\arguments{
\item{mat}{a symmetric matrix with zero values on the diagonal.}

\item{tolerance}{the error tolerance used to check convergence in power
iteration. The algorithm stops when the total absolute difference between
two consecutive iterations is less than the tolerance or when maxIter
iterations have been reached.}

\item{maxIter}{the maximum number of iterations allowed for the calculation.
If the tolerance is not reached before this limit, the algorithm stops.}

\item{sorted}{a logical indicator of whether the centrality values should
be returned in decreasing order (TRUE) or not (FALSE).}
}
\value{
a vector of eigenvector centrality values for each node.
}
\description{
Calculates eigenvector centrality using power iteration method.
}
\details{
Perform power iteration to calculate eigenvector centrality. Eigenvector
centrality is used to measure the importance of a node by considering the
centrality of its neighbors.Nodes (genes) with high eigenvector centralities
are those that are highly connected to many other nodes which are highly
connected to many others (and so on). Using the differential co-expression
z-score matrix as input, the nodes with high eigenvector centralities
represent the genes that are located at the hubs of highly rewired
sub-networks.
}
\examples{
# get expression data
data(exprBC)
# get sample information
data(samplesBC)

# calculate differential correlation matrix
dcMat <- DCMat(exprMat = exprBC,
               condition = samplesBC$er_status,
               corMethod = "spearman")

# calculate gene centrality base on differential correlation matrix
geneCentrality <- eigenCentrality(mat = dcMat)

}
\seealso{
\code{\link{DCMat}}

\code{\link{rankPlot}}
}
\author{
Lanying Wei
}
